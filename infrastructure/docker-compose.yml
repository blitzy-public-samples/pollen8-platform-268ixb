version: '3.8'

services:
  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:4000
    depends_on:
      - backend
    networks:
      - pollen8_network

  backend:
    build:
      context: ../src/api
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://user:password@db:5432/pollen8
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - pollen8_network

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pollen8
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pollen8_network

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    networks:
      - pollen8_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - pollen8_network

volumes:
  postgres_data:

networks:
  pollen8_network:
    driver: bridge

# Additional configurations
# 1. Environment variable files
# 2. Health check configurations
# 3. Resource limits
# 4. Logging configurations

# Frontend service additional configurations
  frontend:
    # ... (previous configuration)
    env_file:
      - ../src/frontend/.env.development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

# Backend service additional configurations
  backend:
    # ... (previous configuration)
    env_file:
      - ../src/api/.env.development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

# Database service additional configurations
  db:
    # ... (previous configuration)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pollen8"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

# Redis service additional configurations
  redis:
    # ... (previous configuration)
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

# Nginx service additional configurations
  nginx:
    # ... (previous configuration)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

# Logging configurations for all services
x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

services:
  frontend:
    # ... (previous configuration)
    logging: *default-logging

  backend:
    # ... (previous configuration)
    logging: *default-logging

  db:
    # ... (previous configuration)
    logging: *default-logging

  redis:
    # ... (previous configuration)
    logging: *default-logging

  nginx:
    # ... (previous configuration)
    logging: *default-logging